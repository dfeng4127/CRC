library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(dplyr)
library(RColorBrewer)
setwd('./ST')  # same for all sample
ST <- Load10X_Spatial(
  "./",
  filename = "filtered_feature_bc_matrix.h5",
  assay = "Spatial",
  slice = "slice1")

plot1 <- VlnPlot(ST, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(ST, features = "nCount_Spatial") + theme(legend.position = "right")
wrap_plots(plot1, plot2)

# sctransform
ST <- SCTransform(ST, assay = "Spatial", verbose = FALSE)

# Dimensionality reduction, clustering, and visualization
ST <- RunPCA(ST, assay = "SCT", verbose = FALSE)
ST <- FindNeighbors(ST, reduction = "pca", dims = 1:30)
ST <- FindClusters(ST, verbose = FALSE)
ST <- RunUMAP(ST, reduction = "pca", dims = 1:30)
p1 <- DimPlot(ST, reduction = "umap", label = TRUE)
p2 <- SpatialDimPlot(ST, label = TRUE, label.size = 3)
p1 + p2
SpatialDimPlot(ST, cells.highlight = CellsByIdentities(object = ST, idents = c(1, 2, 3, 4)), 
               facet.highlight = TRUE, ncol = 2)

# Gene expression visualization
SpatialFeaturePlot(ST, features = c("MUC2", "MYC"),alpha = c(0.1, 1))
p1 <- SpatialFeaturePlot(ST, features = "MUC2", pt.size.factor = 1)
p2 <- SpatialFeaturePlot(ST, features = "MYC", alpha = c(0.1, 1))
p1 + p2

